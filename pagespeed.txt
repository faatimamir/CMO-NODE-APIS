🔍 Key Metrics:
performance_score: 93
seo_score: 100
first_contentful_paint: 0.9 s
largest_contentful_paint: 1.5 s
total_blocking_time: 20 ms
speed_index: 1.6 s
cumulative_layout_shift: 0.021
time_to_interactive: 1.5 s
created_at: 2025-04-10T07:14:06.807Z
updated_at: 2025-04-10T07:14:06.807Z

🛠️  Fix Recommendations:
- Defer offscreen images
  ↪ Description: Consider lazy-loading offscreen and hidden images after all critical resources have finished loading to lower time to interactive. [Learn how to defer offscreen images](https://developer.chrome.com/docs/lighthouse/performance/offscreen-images/).
  ↪ Detail: Potential savings of 131 KiB
  ↪ URL: https://aiattorney.com.pk/assets/Case%20diary-BTRwfGEM.png

- Third parties
  ↪ Description: Third party code can significantly impact load performance. [Reduce and defer loading of third party code](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/) to prioritize your page's content.

- Improve image delivery
  ↪ Description: Reducing the download time of images can improve the perceived load time of the page and LCP. [Learn more about optimizing image size](https://developer.chrome.com/docs/lighthouse/performance/uses-optimized-images/)
  ↪ URL: https://aiattorney.com.pk/assets/hero%20%201-BIdq_zKZ.png

- Definition list items are not wrapped in `<dl>` elements
  ↪ Description: Definition list items (`<dt>` and `<dd>`) must be wrapped in a parent `<dl>` element to ensure that screen readers can properly announce them. [Learn how to structure definition lists correctly](https://dequeuniversity.com/rules/axe/4.10/dlitem).

- Max Potential First Input Delay
  ↪ Description: The maximum potential First Input Delay that your users could experience is the duration of the longest task. [Learn more about the Maximum Potential First Input Delay metric](https://developer.chrome.com/docs/lighthouse/performance/lighthouse-max-potential-fid/).
  ↪ Detail: 70 ms

- Serve images in next-gen formats
  ↪ Description: Image formats like WebP and AVIF often provide better compression than PNG or JPEG, which means faster downloads and less data consumption. [Learn more about modern image formats](https://developer.chrome.com/docs/lighthouse/performance/uses-webp-images/).
  ↪ Detail: Potential savings of 61 KiB
  ↪ URL: https://aiattorney.com.pk/assets/seach-B84BXukZ.png

- `[user-scalable="no"]` is used in the `<meta name="viewport">` element or the `[maximum-scale]` attribute is less than 5.
  ↪ Description: Disabling zooming is problematic for users with low vision who rely on screen magnification to properly see the contents of a web page. [Learn more about the viewport meta tag](https://dequeuniversity.com/rules/axe/4.10/meta-viewport).

- Largest Contentful Paint
  ↪ Description: Largest Contentful Paint marks the time at which the largest text or image is painted. [Learn more about the Largest Contentful Paint metric](https://developer.chrome.com/docs/lighthouse/performance/lighthouse-largest-contentful-paint/)
  ↪ Detail: 1.5 s

- First Contentful Paint
  ↪ Description: First Contentful Paint marks the time at which the first text or image is painted. [Learn more about the First Contentful Paint metric](https://developer.chrome.com/docs/lighthouse/performance/first-contentful-paint/).
  ↪ Detail: 0.9 s

- Layout shift culprits
  ↪ Description: Layout shifts occur when elements move absent any user interaction. [Investigate the causes of layout shifts](https://web.dev/articles/optimize-cls), such as elements being added, removed, or their fonts changing as the page loads.

- Speed Index
  ↪ Description: Speed Index shows how quickly the contents of a page are visibly populated. [Learn more about the Speed Index metric](https://developer.chrome.com/docs/lighthouse/performance/speed-index/).
  ↪ Detail: 1.6 s

- LCP request discovery
  ↪ Description: Optimize LCP by making the LCP image [discoverable](https://web.dev/articles/optimize-lcp#1_eliminate_resource_load_delay) from the HTML immediately, and [avoiding lazy-loading](https://web.dev/articles/lcp-lazy-loading)

- Eliminate render-blocking resources
  ↪ Description: Resources are blocking the first paint of your page. Consider delivering critical JS/CSS inline and deferring all non-critical JS/styles. [Learn how to eliminate render-blocking resources](https://developer.chrome.com/docs/lighthouse/performance/render-blocking-resources/).
  ↪ Detail: Potential savings of 80 ms
  ↪ URL: https://aiattorney.com.pk/assets/root-Cxo78Pt1.css

- Optimize DOM size
  ↪ Description: A large DOM can increase the duration of style calculations and layout reflows, impacting page responsiveness. A large DOM will also increase memory usage. [Learn how to avoid an excessive DOM size](https://developer.chrome.com/docs/lighthouse/performance/dom-size/).

- Reduce unused JavaScript
  ↪ Description: Reduce unused JavaScript and defer loading scripts until they are required to decrease bytes consumed by network activity. [Learn how to reduce unused JavaScript](https://developer.chrome.com/docs/lighthouse/performance/unused-javascript/).
  ↪ Detail: Potential savings of 131 KiB
  ↪ URL: https://www.googletagmanager.com/gtag/js?id=G-FFECPWZPC4

- Image elements do not have explicit `width` and `height`
  ↪ Description: Set an explicit width and height on image elements to reduce layout shifts and improve CLS. [Learn how to set image dimensions](https://web.dev/articles/optimize-cls#images_without_dimensions)
  ↪ URL: https://aiattorney.com.pk/assets/hero%20%201-BIdq_zKZ.png

- Render blocking requests
  ↪ Description: Requests are blocking the page's initial render, which may delay LCP. [Deferring or inlining](https://web.dev/learn/performance/understanding-the-critical-path#render-blocking_resources/) can move these network requests out of the critical path.
  ↪ URL: https://aiattorney.com.pk/assets/root-Cxo78Pt1.css

- Avoid an excessive DOM size
  ↪ Description: A large DOM will increase memory usage, cause longer [style calculations](https://developers.google.com/web/fundamentals/performance/rendering/reduce-the-scope-and-complexity-of-style-calculations), and produce costly [layout reflows](https://developers.google.com/speed/articles/reflow). [Learn how to avoid an excessive DOM size](https://developer.chrome.com/docs/lighthouse/performance/dom-size/).
  ↪ Detail: 1,006 elements

- Reduce unused CSS
  ↪ Description: Reduce unused rules from stylesheets and defer CSS not used for above-the-fold content to decrease bytes consumed by network activity. [Learn how to reduce unused CSS](https://developer.chrome.com/docs/lighthouse/performance/unused-css-rules/).
  ↪ Detail: Potential savings of 12 KiB
  ↪ URL: https://aiattorney.com.pk/assets/root-Cxo78Pt1.css

- Document request latency
  ↪ Description: Your first network request is the most important.  Reduce its latency by avoiding redirects, ensuring a fast server response, and enabling text compression.

- Elements with visible text labels do not have matching accessible names.
  ↪ Description: Visible text labels that do not match the accessible name can result in a confusing experience for screen reader users. [Learn more about accessible names](https://dequeuniversity.com/rules/axe/4.10/label-content-name-mismatch).

- Largest Contentful Paint element
  ↪ Description: This is the largest contentful element painted within the viewport. [Learn more about the Largest Contentful Paint element](https://developer.chrome.com/docs/lighthouse/performance/lighthouse-largest-contentful-paint/)
  ↪ Detail: 1,460 ms

- Time to Interactive
  ↪ Description: Time to Interactive is the amount of time it takes for the page to become fully interactive. [Learn more about the Time to Interactive metric](https://developer.chrome.com/docs/lighthouse/performance/interactive/).
  ↪ Detail: 1.5 s

- `<dl>`'s do not contain only properly-ordered `<dt>` and `<dd>` groups, `<script>`, `<template>` or `<div>` elements.
  ↪ Description: When definition lists are not properly marked up, screen readers may produce confusing or inaccurate output. [Learn how to structure definition lists correctly](https://dequeuniversity.com/rules/axe/4.10/definition-list).

- Properly size images
  ↪ Description: Serve images that are appropriately-sized to save cellular data and improve load time. [Learn how to size images](https://developer.chrome.com/docs/lighthouse/performance/uses-responsive-images/).
  ↪ Detail: Potential savings of 262 KiB
  ↪ URL: https://aiattorney.com.pk/assets/hero%20%201-BIdq_zKZ.png

- Background and foreground colors do not have a sufficient contrast ratio.
  ↪ Description: Low-contrast text is difficult or impossible for many users to read. [Learn how to provide sufficient color contrast](https://dequeuniversity.com/rules/axe/4.10/color-contrast).

